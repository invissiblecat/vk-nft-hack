/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ContentCollection,
  ContentCollectionInterface,
} from "../ContentCollection";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "collectionName",
        type: "string",
      },
      {
        internalType: "string",
        name: "collectionSymbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "NftCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "members",
        type: "address[]",
      },
    ],
    name: "WhiteListMembersDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "members",
        type: "address[]",
      },
    ],
    name: "WhiteListMembersSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addrs",
        type: "address[]",
      },
    ],
    name: "addAdmins",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newRemaningPlacesCount",
        type: "uint256",
      },
    ],
    name: "changeRemainingWhitelistPlaces",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "whitelistPlaces",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "initialWhitelistMembers",
        type: "address[]",
      },
    ],
    name: "createNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "members",
        type: "address[]",
      },
    ],
    name: "deleteWhitelistMembers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "remainingWhitelistPlaces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addrs",
        type: "address[]",
      },
    ],
    name: "removeAdmins",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "members",
        type: "address[]",
      },
    ],
    name: "setWhitelistMembers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200261b3803806200261b833981016040819052620000349162000249565b8151829082906200004d906000906020850190620000f0565b50805162000063906001906020840190620000f0565b505050620000806200007a6200009a60201b60201c565b6200009e565b5050600880546001600160a01b0319163317905562000303565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000fe90620002b0565b90600052602060002090601f0160209004810192826200012257600085556200016d565b82601f106200013d57805160ff19168380011785556200016d565b828001600101855582156200016d579182015b828111156200016d57825182559160200191906001019062000150565b506200017b9291506200017f565b5090565b5b808211156200017b576000815560010162000180565b600082601f830112620001a7578081fd5b81516001600160401b0380821115620001c457620001c4620002ed565b604051601f8301601f19908116603f01168101908282118183101715620001ef57620001ef620002ed565b816040528381526020925086838588010111156200020b578485fd5b8491505b838210156200022e57858201830151818301840152908201906200020f565b838211156200023f57848385830101525b9695505050505050565b600080604083850312156200025c578182fd5b82516001600160401b038082111562000273578384fd5b620002818683870162000196565b9350602085015191508082111562000297578283fd5b50620002a68582860162000196565b9150509250929050565b600181811c90821680620002c557607f821691505b60208210811415620002e757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61230880620003136000396000f3fe608060405234801561001057600080fd5b50600436106101ae5760003560e01c8063715018a6116100ee5780639c54df6411610097578063c87b56dd11610071578063c87b56dd14610393578063e985e9c5146103a6578063eefaf5f8146103e2578063f2fde38b1461040257600080fd5b80639c54df641461035a578063a22cb4651461036d578063b88d4fde1461038057600080fd5b806382abda00116100c857806382abda001461032e5780638da5cb5b1461034157806395d89b411461035257600080fd5b8063715018a614610302578063726305311461030a5780637cedbbef1461031b57600080fd5b806323b872dd1161015b57806342842e0e1161013557806342842e0e146102a8578063440a9987146102bb5780636352211e146102ce57806370a08231146102e157600080fd5b806323b872dd1461025657806324d7806c14610269578063377e11e01461029557600080fd5b806308b5d4201161018c57806308b5d4201461021b578063095ea7b31461023057806316317f0c1461024357600080fd5b806301ffc9a7146101b357806306fdde03146101db578063081812fc146101f0575b600080fd5b6101c66101c1366004611f79565b610415565b60405190151581526020015b60405180910390f35b6101e36104fa565b6040516101d29190612183565b6102036101fe366004611fb1565b61058c565b6040516001600160a01b0390911681526020016101d2565b61022e610229366004611feb565b6105b3565b005b61022e61023e366004611f1d565b6107f7565b61022e610251366004612051565b610924565b61022e610264366004611df0565b6109ef565b6101c6610277366004611da4565b6001600160a01b031660009081526007602052604090205460ff1690565b61022e6102a3366004611f46565b610a76565b61022e6102b6366004611df0565b610af8565b61022e6102c9366004612030565b610b13565b6102036102dc366004611fb1565b610c4e565b6102f46102ef366004611da4565b610cb3565b6040519081526020016101d2565b61022e610d4d565b6008546001600160a01b0316610203565b61022e610329366004611feb565b610d61565b6101c661033c366004611fc9565b610efd565b6006546001600160a01b0316610203565b6101e3610f81565b61022e610368366004611f46565b610f90565b61022e61037b366004611ee3565b61100e565b61022e61038e366004611e2b565b611019565b6101e36103a1366004611fb1565b6110a7565b6101c66103b4366004611dbe565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102f46103f0366004611fb1565b600a6020526000908152604090205481565b61022e610410366004611da4565b61111b565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd0000000000000000000000000000000000000000000000000000000014806104a857507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806104f457507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60606000805461050990612222565b80601f016020809104026020016040519081016040528092919081815260200182805461053590612222565b80156105825780601f1061055757610100808354040283529160200191610582565b820191906000526020600020905b81548152906001019060200180831161056557829003601f168201915b5050505050905090565b6000610597826111ab565b506000908152600460205260409020546001600160a01b031690565b3360009081526007602052604090205460ff16806105db57506006546001600160a01b031633145b61062c5760405162461bcd60e51b815260206004820152600d60248201527f6163636573732064656e6965640000000000000000000000000000000000000060448201526064015b60405180910390fd5b81610636816111ab565b81516000848152600a602052604090205410156106bb5760405162461bcd60e51b815260206004820152603360248201527f73657457686974656c6973744d656d626572733a206e6f7420656e6f7567682060448201527f706c6163657320696e2077686974656c697374000000000000000000000000006064820152608401610623565b60005b82518110156107b1576106f8848483815181106106eb57634e487b7160e01b600052603260045260246000fd5b6020026020010151610efd565b156107025761079f565b600084815260096020526040812084516001929086908590811061073657634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600a6000868152602001908152602001600020600082825461079991906121df565b90915550505b806107a98161225d565b9150506106be565b508151156107f257827f4501d29cb333a08a38aca7719261302786cd04013e1b2b8b2b28ea94cdc7b725836040516107e99190612136565b60405180910390a25b505050565b600061080282610c4e565b9050806001600160a01b0316836001600160a01b0316141561088c5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f72000000000000000000000000000000000000000000000000000000000000006064820152608401610623565b336001600160a01b03821614806108a857506108a881336103b4565b61091a5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610623565b6107f2838361120f565b3360009081526007602052604090205460ff168061094c57506006546001600160a01b031633145b6109985760405162461bcd60e51b815260206004820152600d60248201527f6163636573732064656e696564000000000000000000000000000000000000006044820152606401610623565b6109a23384611295565b6000838152600a602052604090208290556109bd83826105b3565b60405183815233907f7090a25a7df3dbfa90026265d7e26de5603ef344a3028fcfb20696631625e1d0906020016107e9565b6109f93382611446565b610a6b5760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f766564000000000000000000000000000000000000006064820152608401610623565b6107f28383836114c5565b610a7e611713565b60005b8151811015610af457600060076000848481518110610ab057634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580610aec8161225d565b915050610a81565b5050565b6107f283838360405180602001604052806000815250611019565b3360009081526007602052604090205460ff1680610b3b57506006546001600160a01b031633145b610b875760405162461bcd60e51b815260206004820152600d60248201527f6163636573732064656e696564000000000000000000000000000000000000006044820152606401610623565b81610b91816111ab565b6000838152600a6020526040902054821415610c3b5760405162461bcd60e51b815260206004820152604260248201527f6368616e676552656d61696e696e6757686974656c697374506c616365733a2060448201527f6e657752656d616e696e67506c61636573436f756e742069732074686520736160648201527f6d65000000000000000000000000000000000000000000000000000000000000608482015260a401610623565b506000918252600a602052604090912055565b6000818152600260205260408120546001600160a01b0316806104f45760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610623565b60006001600160a01b038216610d315760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e657200000000000000000000000000000000000000000000006064820152608401610623565b506001600160a01b031660009081526003602052604090205490565b610d55611713565b610d5f600061176d565b565b3360009081526007602052604090205460ff1680610d8957506006546001600160a01b031633145b610dd55760405162461bcd60e51b815260206004820152600d60248201527f6163636573732064656e696564000000000000000000000000000000000000006044820152606401610623565b81610ddf816111ab565b60005b8251811015610ec557610e0f848483815181106106eb57634e487b7160e01b600052603260045260246000fd5b610e1857610eb3565b600084815260096020526040812084518290869085908110610e4a57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600a60008681526020019081526020016000206000828254610ead91906121c7565b90915550505b80610ebd8161225d565b915050610de2565b508151156107f257827f31bef893ee5cc2ef0c1d689225a0ddf2a942a2cd0bf8477c000dcf03c8e19a6c836040516107e99190612136565b6000610f116006546001600160a01b031690565b6001600160a01b0316826001600160a01b03161480610f4857506001600160a01b03821660009081526007602052604090205460ff165b15610f55575060016104f4565b5060009182526009602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60606001805461050990612222565b610f98611713565b60005b8151811015610af457600160076000848481518110610fca57634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806110068161225d565b915050610f9b565b610af43383836117d7565b6110233383611446565b6110955760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f766564000000000000000000000000000000000000006064820152608401610623565b6110a1848484846118a6565b50505050565b60606110b2826111ab565b60006110c960408051602081019091526000815290565b905060008151116110e95760405180602001604052806000815250611114565b806110f38461192f565b6040516020016111049291906120cb565b6040516020818303038152906040525b9392505050565b611123611713565b6001600160a01b03811661119f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610623565b6111a88161176d565b50565b6000818152600260205260409020546001600160a01b03166111a85760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610623565b600081815260046020526040902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038416908117909155819061125c82610c4e565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6001600160a01b0382166112eb5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610623565b6000818152600260205260409020546001600160a01b0316156113505760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610623565b61135e6000838360016119e7565b6000818152600260205260409020546001600160a01b0316156113c35760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610623565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60008061145283610c4e565b9050806001600160a01b0316846001600160a01b0316148061149957506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806114bd5750836001600160a01b03166114b28461058c565b6001600160a01b0316145b949350505050565b826001600160a01b03166114d882610c4e565b6001600160a01b0316146115545760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e65720000000000000000000000000000000000000000000000000000006064820152608401610623565b6001600160a01b0382166115cf5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610623565b6115dc83838360016119e7565b826001600160a01b03166115ef82610c4e565b6001600160a01b03161461166b5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e65720000000000000000000000000000000000000000000000000000006064820152608401610623565b600081815260046020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000009081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b03163314610d5f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610623565b600680546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156118395760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610623565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6118b18484846114c5565b6118bd84848484611a6f565b6110a15760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608401610623565b6060600061193c83611c1c565b600101905060008167ffffffffffffffff81111561196a57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611994576020820181803683370190505b5090508181016020015b600019017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85049450846119da576119df565b61199e565b509392505050565b60018111156110a1576001600160a01b03841615611a2d576001600160a01b03841660009081526003602052604081208054839290611a279084906121df565b90915550505b6001600160a01b038316156110a1576001600160a01b03831660009081526003602052604081208054839290611a649084906121c7565b909155505050505050565b60006001600160a01b0384163b15611c11576040517f150b7a020000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063150b7a0290611acc9033908990889088906004016120fa565b602060405180830381600087803b158015611ae657600080fd5b505af1925050508015611b16575060408051601f3d908101601f19168201909252611b1391810190611f95565b60015b611bc6573d808015611b44576040519150601f19603f3d011682016040523d82523d6000602084013e611b49565b606091505b508051611bbe5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608401610623565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a02000000000000000000000000000000000000000000000000000000001490506114bd565b506001949350505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611c65577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310611c91576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611caf57662386f26fc10000830492506010015b6305f5e1008310611cc7576305f5e100830492506008015b6127108310611cdb57612710830492506004015b60648310611ced576064830492506002015b600a83106104f45760010192915050565b80356001600160a01b0381168114611d1557600080fd5b919050565b600082601f830112611d2a578081fd5b8135602067ffffffffffffffff821115611d4657611d4661228e565b8160051b611d55828201612196565b838152828101908684018388018501891015611d6f578687fd5b8693505b85841015611d9857611d8481611cfe565b835260019390930192918401918401611d73565b50979650505050505050565b600060208284031215611db5578081fd5b61111482611cfe565b60008060408385031215611dd0578081fd5b611dd983611cfe565b9150611de760208401611cfe565b90509250929050565b600080600060608486031215611e04578081fd5b611e0d84611cfe565b9250611e1b60208501611cfe565b9150604084013590509250925092565b60008060008060808587031215611e40578081fd5b611e4985611cfe565b93506020611e58818701611cfe565b935060408601359250606086013567ffffffffffffffff80821115611e7b578384fd5b818801915088601f830112611e8e578384fd5b813581811115611ea057611ea061228e565b611eb284601f19601f84011601612196565b91508082528984828501011115611ec7578485fd5b8084840185840137810190920192909252939692955090935050565b60008060408385031215611ef5578182fd5b611efe83611cfe565b915060208301358015158114611f12578182fd5b809150509250929050565b60008060408385031215611f2f578182fd5b611f3883611cfe565b946020939093013593505050565b600060208284031215611f57578081fd5b813567ffffffffffffffff811115611f6d578182fd5b6114bd84828501611d1a565b600060208284031215611f8a578081fd5b8135611114816122a4565b600060208284031215611fa6578081fd5b8151611114816122a4565b600060208284031215611fc2578081fd5b5035919050565b60008060408385031215611fdb578182fd5b82359150611de760208401611cfe565b60008060408385031215611ffd578182fd5b82359150602083013567ffffffffffffffff81111561201a578182fd5b61202685828601611d1a565b9150509250929050565b60008060408385031215612042578182fd5b50508035926020909101359150565b600080600060608486031215612065578081fd5b8335925060208401359150604084013567ffffffffffffffff811115612089578182fd5b61209586828701611d1a565b9150509250925092565b600081518084526120b78160208601602086016121f6565b601f01601f19169290920160200192915050565b600083516120dd8184602088016121f6565b8351908301906120f18183602088016121f6565b01949350505050565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261212c608083018461209f565b9695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156121775783516001600160a01b031683529284019291840191600101612152565b50909695505050505050565b602081526000611114602083018461209f565b604051601f8201601f1916810167ffffffffffffffff811182821017156121bf576121bf61228e565b604052919050565b600082198211156121da576121da612278565b500190565b6000828210156121f1576121f1612278565b500390565b60005b838110156122115781810151838201526020016121f9565b838111156110a15750506000910152565b600181811c9082168061223657607f821691505b6020821081141561225757634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561227157612271612278565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b7fffffffff00000000000000000000000000000000000000000000000000000000811681146111a857600080fdfea26469706673582212202f3a58d191be1dd5d08e9359db9bfb882783c468386c2568a1c934bf1a75c27964736f6c63430008040033";

type ContentCollectionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContentCollectionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContentCollection__factory extends ContractFactory {
  constructor(...args: ContentCollectionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    collectionName: PromiseOrValue<string>,
    collectionSymbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContentCollection> {
    return super.deploy(
      collectionName,
      collectionSymbol,
      overrides || {}
    ) as Promise<ContentCollection>;
  }
  override getDeployTransaction(
    collectionName: PromiseOrValue<string>,
    collectionSymbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      collectionName,
      collectionSymbol,
      overrides || {}
    );
  }
  override attach(address: string): ContentCollection {
    return super.attach(address) as ContentCollection;
  }
  override connect(signer: Signer): ContentCollection__factory {
    return super.connect(signer) as ContentCollection__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContentCollectionInterface {
    return new utils.Interface(_abi) as ContentCollectionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ContentCollection {
    return new Contract(address, _abi, signerOrProvider) as ContentCollection;
  }
}
